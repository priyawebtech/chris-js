variables, stings, numbers 8.1
// Pratice in inspect mode
> var name = "Priya";
undefined
> name
< 'Priya'
> name = 'Priya Thakur';
'Priya Thakur'

> var age = 27;
undefined
> age
27

> var joined = " My name is " + name + " and I am " + age;
undefined
> joined
' My name is Priya Thakur and I am 27'

> var joined = "My name is " + name + " and I'm " + age;
> joined
"My name is Priya Thakur and I'm 27"

> var joined = 'My name is ' + name + " and I'm " + age;
undefined
> joined
"My name is Priya Thakur and I'm 27"
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
visual studio code

var name1 = "Priya";
name1 = "Priya Thakur";
console.log(name1)
< Priya Thakur

var age = 27;
console.log(age)
< 27

var joined = 'My name is ' + name1 + " and I'm " + age;
console.log(joined)
< My name is Priya Thakur and I'm 27

....................................
8.2. Javascript arithmetic and operators

> 10-5
5
> 34*7
238
> 12+6
18
> 3/3
1
> 12/4
3
> 12/3
4
> 12%3
0
> 12%4
0
> 13 % 3
1

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
visual studio code
// Airthmatic operators
// + - / * % ++ --

var leftSchool = 16;
age = 34;
var yearSinceSchool = age - leftSchool;
console.log(yearSinceSchool);
< 18

// Order of operation
var number = 10 + 10 *2;
console.log(number);
< 30

if you add apretis this result will be different ()
var number = (10 + 10) *2;
console.log(number);
< 40

// increment / decrement -- ++ represent plus 1, -- represent mins 1
var number = (10 + 10) *2;
number++
console.log(number); 
< 41

//if you add more number it will increment
var number = (10 + 10) *2;

// for decrement
var number = (10 + 10) *2;
number--
console.log(number);
< 39
number++
number++
console.log(number);
< 42

..................................................
8.3. Alert, prompt and confirm
console.log > checking or debugging output
alert> Notification
confirm> either yes or no
prompt> to take input from user
// Alert == 
alert(10 % 3);
< 1

alert('Hellow!!!');
< Hellow!!!

var name1 = "Priya";
alert('Hellow!!! ' + name1);
< Hellow!!! Priya

var name1 = "Priya";
alert('Hellow!!! ' + name1 + ' Please login to continue ');
< Hellow!!! Priya Please login to continue 

// \n -- to put into another line 
var name1 = "Priya";
alert('Hellow!!! ' + name1 + ' \nPlease login to continue ');
< Hellow!!! Priya 
  Please login to continue

!!!!!!!!!!!!!!!!!!!!!!!!
// prompt
prompt('hello, what is your name?');
< hello, what is your name?

var name1 = prompt('hello, what is your name?');
console.log(name1);
< Priya -- first type in prompt then check in console
< Jai Siya Ram
if you cancel it it will type < null

var name1 = prompt('hello, what is your name?');
console.log(name1);
alert('Welcome ' + name1 + '!')

< first type name = Priya
< then u will result = Welcome Priya
< and if u type nothing and cancel it it will type = Welcome null!

var name1 = prompt('hello, what is your name?');
console.log(name1);
alert('Welcome ' + name1 + '!')

var newName;
alert(newName);
< undefined -- when u cancel it

!!!!!!!!!!!!!!!!!!!!!!!!!
// confirm
confirm('you must me my hanuman ji');
< you must me my hanuman ji

var age = confirm('you must me be over 16 to enter, please confirm');
console.log(age);
< you must me be over 16 to enter, please confirm
< value in console == ture
< if we click on cancel value = false

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
8.4. If/else statements and comparison

if(10>5){
  alert('10 is grater than 5');
}
< 10 is grater than 5

if(10 < 5){
  alert('10 is grater than 5');
}
< false answer will not show

if(10 > 10){
  alert('10 is grater than 5');
}
< false answer will not show

  if(10 >= 10){
  alert('10 is grater than 5');
}
< 10 is grater than 5

if(10 <= 10){
  alert('10 is grater than 5');
}
< 10 is grater than 5

var x = 5;

if(x == 10){
  alert('true');
}
<  false answer will not show


var x = 5;

if(x != 10){
  alert('true');
}
< true

var x = 5;
var y = "10";
console.log(typeof x);
if(x != 10){
  alert('true');
}
< value show = true and in console show typeof number

//value of y
var x = 5;
var y = "10";
console.log(typeof y);
if(x != 10){
  alert('true');
}
< value show = true and in console show typeof string

// if we use ==
var x = 5;
var y = "5";
console.log(typeof y);
if(y == 5){
  alert('true');
}
< true .  typeof string

// if we use ===

var x = 5;
var y = "5";
console.log(typeof y);
if(y === 5){
  alert('true');
}
< false value will not show.  typeof string

// ====
var x = 5;
var y = "5";
console.log(typeof x);
if(x === 5){
  alert('true');
}
< ture. typeof number

// !== not equal to and data type
var x = 5;
var y = "5";
console.log(typeof x);
if(x !== 5){
  alert('true');
}
< no result on false value

//if and else . if value is true

var hungry = true;
if (hungry) {
  alert('Get some food!');
}else {
  alert('Maybe later');
}
< Get some food!

// if value is false 
var hungry = false;
if (hungry) {
  alert('Get some food!');
}else {
  alert('Maybe later');
}

< Maybe later

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
8.5. Nesting if else statements
//Nesting if/else
var hungry = true;
var craving = 'Pizza';

if (hungry) {

  if(craving === 'Pizza'){
    alert('Yammy Pizza!');
  }
 
}else {
  alert('Maybe later...');
}

< Yammy Pizza!

// if we use else
var hungry = true;
var craving = 'Chinese';

if (hungry) {

  if(craving === 'Pizza'){
    alert('Yammy Pizza!');
  }else{
    alert(`Let's get some food`);
  }
 
}else {
  alert('Maybe later...');
}

< Let's get some food

// if change hungry to false
var hungry = false;
var craving = 'Chinese';

if (hungry) {

  if(craving === 'Pizza'){
    alert('Yammy Pizza!');
  }else{
    alert(`Let's get some food`);
  }
 
}else {
  alert('Maybe later...');
}
< Maybe later...

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
8.6. Else if and logical operators
var hungry = true;
var craving = "Chicken";

if(hungry && craving == 'Pizza'){
  alert('Yammy Pizza');
}
< nothing
// && and and logical will work when both value is true otherwise not going to show

var hungry = true;
var craving = "Chicken";

if(hungry || craving == 'Pizza'){
  alert('Yammy Pizza');
}
< Yammy Pizza
// if we use || tow piepes it will show the result

//using not equal too !
var hungry = true;
var craving = "Chicken";

if(!hungry){
  alert('Yammy Pizza');
}
< no result

// using false var
var hungry = false;
var craving = "Chicken";

if(!hungry){
  alert('Yammy Pizza');
}
< Yammy Pizza
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
8.7. The ternary operator

Another type of conditional statement is called the ternary operator. 
The ternary operator is often used as a shorter alternative to the if else statement, 
it is also on one line so can also look a little simpler.

// ternory single line if else

condition ? if condition is true : if condition is false

console.log(10 > 5 ? 'True' : 'False');
<True

console.log(10 < 5 ? 'True' : 'False');
< False

var hungry = true;
var shouldIEat = hungry ? 'Yes, lets eat' : 'No right now;'
console.log(shouldIEat);
< Yes, lets eat

var hungry = false;
var shouldIEat = hungry ? 'Yes, lets eat' : 'No right now;'
console.log(shouldIEat);
< No right now;

var loggedIn = false;

alert('Hello, ' + (loggedIn ? 'Welcome back!' : 'Please login to your account'));
< Hello, Please login to your account

var loggedIn = true;

alert('Hello, ' + (loggedIn ? 'Welcome back!' : 'Please login to your account'));
< Hello, Welcome back!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

8.8. The switch statements
Use the switch statement to select one of many code blocks to be executed.

Syntax
switch(expression) {
  case x:
    // code block
    break;
  case y:
    // code block
    break;
  default:
    // code block
}

var food = "Eggs"; // change here the value u will get result

switch(food){
  case 'Pizza' :
    console.log('Pizza is awesome');
    break;

  case 'Eggs' :
    console.log('Eggs is awesome');
    break;
    
   case 'Bacon' : 
    console.log('Bacon is awesome');
    break;

    default:
      console.log('I love ' + food); 
}
< Eggs is awesome
